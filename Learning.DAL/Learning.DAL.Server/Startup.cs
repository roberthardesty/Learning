using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Learning.Autogenerated.ODataApi;
using Learning.DAL.Models;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;

namespace Learning.DAL.Server
{
    public class Startup
    {
        // This method gets called by the runtime. Use this method to add services to the container.
        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddControllers(mvcOptions =>
                mvcOptions.EnableEndpointRouting = false);
            services.AddODataEFGenerator();

            services.AddScoped<IAdventureWorksContext, AdventureWorksContext>(_ =>
            {
                var builder = new DbContextOptionsBuilder<AdventureWorksContext>();
                builder.UseSqlServer("Data Source=LAPTOP-OJ2R4NJ0;Initial Catalog=AdventureWorks2019;Integrated Security=True");
                return new AdventureWorksContext(builder.Options);
            });
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }
            app.UseODataEFGenerator();
        }
    }
}
